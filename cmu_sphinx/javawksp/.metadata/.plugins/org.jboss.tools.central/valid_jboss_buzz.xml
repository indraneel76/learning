<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Configuring permissions using Elytron in WildFly 13</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uqX68eW1SBc/configuring-permissions-using-elytron-in-wildfly-13" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_aggregated" scheme="searchisko:content:tags" /><category term="feed_name_fjuma" scheme="searchisko:content:tags" /><category term="permissions" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Farah Juma</name></author><id>searchisko:content:id:jbossorg_blog-configuring_permissions_using_elytron_in_wildfly_13</id><updated>2018-06-01T19:08:02Z</updated><published>2018-06-01T19:08:02Z</published><content type="html">&lt;!-- [DocumentBodyStart:d722d955-214c-4e6d-835a-a054f8e6e0d1] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;With WildFly 13, there&amp;#8217;s a new way to configure permissions in the Elytron subsystem. In particular, it is now possible to configure permissions using a new &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; resource.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Configuring permission sets&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Adding a &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; takes the following general form:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:d801ce18-df39-409b-9b6e-ffd6090d2a01][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/permission-set=MyPermissionSetName:add(permissions=[{class-name="...", module="...", target-name="...", action="..."}...])&lt;/pre&gt;&lt;!--[CodeBlockEnd:d801ce18-df39-409b-9b6e-ffd6090d2a01]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In the above command, &lt;span style="font-family: 'courier new', courier;"&gt;permissions&lt;/span&gt; consists of a set of permissions, where each permission can have the following attributes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;class-name&lt;/span&gt; - the fully qualified class name of the permission (this is the only permission attribute that is required)&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;module&lt;/span&gt; - the optional module to use to load the permission&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;target-name&lt;/span&gt; - the optional target name to pass to the permission as it is constructed&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;action&lt;/span&gt; - the optional action to pass to the permission as it is constructed&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;After a &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; has been created, it can be referenced when creating a permission mapper in order to assign permissions to an identity.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Example configuration&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As an example, the following command can be used to add a new &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; that contains the &lt;span style="font-family: 'courier new', courier;"&gt;org.wildfly.security.auth.permission.RunAsPrincipalPermission&lt;/span&gt;:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:9c261f89-dc4d-4264-9277-d5808860b200][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/permission-set=run-as-principal-permission:add(permissions=[{class-name="org.wildfly.security.auth.permission.RunAsPrincipalPermission", target-name="*"}])&lt;/pre&gt;&lt;!--[CodeBlockEnd:9c261f89-dc4d-4264-9277-d5808860b200]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This results in the following configuration in the Elytron subsystem (note that the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt; permission sets are already present in the default Elytron subsystem configuration):&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:172e8449-2620-42c1-a0a7-0511c83488fc][excluded]--&gt;&lt;pre class="xml" name="code"&gt;&amp;lt;subsystem xmlns="urn:wildfly:elytron:3.0" final-providers="combined-providers" disallowed-providers="OracleUcrypto"&amp;gt; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-sets&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.security.auth.permission.LoginPermission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.extension.batch.jberet.deployment.BatchPermission" module="org.wildfly.extension.batch.jberet" target-name="*"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.transaction.client.RemoteTransactionPermission" module="org.wildfly.transaction.client"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.jboss.ejb.client.RemoteEJBPermission" module="org.jboss.ejb-client"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="run-as-principal-permission"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.security.auth.permission.RunAsPrincipalPermission" target-name="*"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-sets&amp;gt; ... &amp;lt;/subsystem&amp;gt; &lt;/pre&gt;&lt;!--[CodeBlockEnd:172e8449-2620-42c1-a0a7-0511c83488fc]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Next, create a simple permission mapper that references the newly created &lt;span style="font-family: 'courier new', courier;"&gt;run-as-principal-permission&lt;/span&gt; permission set:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:a2aa7362-876b-48f3-8f5b-6603e42c9f8d][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/simple-permission-mapper=my-simple-permission-mapper:add(permission-mappings=[{principals=["anonymous"]}, \ {principals=["server1"], permission-sets=[{permission-set=login-permission}, {permission-set=default-permissions}, {permission-set=run-as-principal-permission}]}, \ {match-all=true,permission-sets=[{permission-set=login-permission}, {permission-set=default-permissions}]}])&lt;/pre&gt;&lt;!--[CodeBlockEnd:a2aa7362-876b-48f3-8f5b-6603e42c9f8d]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This results in the following configuration in the Elytron subsystem:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:4d9be248-5934-4dac-a045-bf9f0e0bd5fc][excluded]--&gt;&lt;pre class="xml" name="code"&gt;&amp;lt;subsystem xmlns="urn:wildfly:elytron:3.0" final-providers="combined-providers" disallowed-providers="OracleUcrypto"&amp;gt; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;mappers&amp;gt; &amp;#160;&amp;#160;&amp;#160; ... &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;simple-permission-mapper name="my-simple-permission-mapper"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;principal name="anonymous"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;principal name="server1"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="run-as-principal-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping match-all="true"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/simple-permission-mapper&amp;gt; &amp;#160;&amp;#160;&amp;#160; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;/mappers&amp;gt; ... &amp;lt;/subsystem&amp;gt; &lt;/pre&gt;&lt;!--[CodeBlockEnd:4d9be248-5934-4dac-a045-bf9f0e0bd5fc]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The above command creates a simple permission mapper that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Assigns no permissions to an &lt;em&gt;anonymous&lt;/em&gt; user&lt;/li&gt;&lt;li&gt;Assigns the permissions referenced in the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt;, &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt;, and &lt;span style="font-family: 'courier new', courier;"&gt;run-as-principal-permission&lt;/span&gt; permission sets to the &lt;em&gt;server1&lt;/em&gt; user&lt;/li&gt;&lt;li&gt;Assigns the permissions referenced in the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt; permission sets to all other users&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Summary&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This blog post has given an overview of Elytron permission sets. For more information about the Elytron subsystem, check out the &lt;a class="jive-link-external-small" href="http://docs.wildfly.org/13/WildFly_Elytron_Security.html" rel="nofollow"&gt;Elytron documentation&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:d722d955-214c-4e6d-835a-a054f8e6e0d1] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uqX68eW1SBc" height="1" width="1" alt=""/&gt;</content><summary>With WildFly 13, there’s a new way to configure permissions in the Elytron subsystem. In particular, it is now possible to configure permissions using a new permission-set resource.   Configuring permission sets   Adding a permission-set takes the following general form:   /subsystem=elytron/permission-set=MyPermissionSetName:add(permissions=[{class-name="...", module="...", target-name="...", act...</summary><dc:creator>Farah Juma</dc:creator><dc:date>2018-06-01T19:08:02Z</dc:date><feedburner:origLink>https://developer.jboss.org/people/fjuma/blog/2018/06/01/configuring-permissions-using-elytron-in-wildfly-13</feedburner:origLink></entry><entry><title>What’s New in WildFly Management Console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WbrQ46fTeXY/" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_wildfly" scheme="searchisko:content:tags" /><category term="hal" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Harald Pehl</name></author><id>searchisko:content:id:jbossorg_blog-what_s_new_in_wildfly_management_console</id><updated>2018-06-01T18:00:00Z</updated><published>2018-06-01T18:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/"&gt;WildFly 13&lt;/a&gt; comes with a management console (HAL) which has been rewritten from scratch. HAL still uses a similar technical stack (GWT) and user experience, but now fully adopts &lt;a href="https://www.patternfly.org/"&gt;PatternFly&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More important we enhanced the existing features and added support for many new subsystems and attributes. The following sections show some highlights of the latest version. For more details about the new features see the release notes for &lt;a href="https://hal.github.io/releases/3.0.0.final/"&gt;HAL 3.0.0.Final&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_finder"&gt;Finder&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The column based navigation (finder) has been greatly improved. You can now use the cursor keys for navigation inside and across columns. To open an application view press ↵ (enter), to go back press ⌫ (backspace). Items in one column are now ordered alphabetically by default. You can pin frequently used items to stay at the top. Most columns offer a filter which can be used to quickly find the items you’re looking for. Finally the previews have been enriched and provide detailed documentation or the main attributes of the selected item. If appropriate the previews contain action links for the most common tasks.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/finder.png" alt="Finder" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 1. Finder&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_applications"&gt;Applications&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Applications provide a new breadcrumb at the top to quickly switch between items of the same kind. More complex applications can include a vertical navigation. Finally most applications can be easily opened in an external window and provide an expert mode which uses the generic model browser.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/application.png" alt="Applications" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 2. Applications&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_deployments"&gt;Deployments&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Many new features have been added to the deployment section:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use drag and drop to deploy artifacts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Content browser with preview for text and images&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Create exploded deployments&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CRUD support for exploded deployments:&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Add empty files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upload content&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Modify content&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove content&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Download complete deployments or deployment content&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment.png" alt="Deployments" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 3. Deployments&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment-model.png" alt="Deployment Model" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 4. Deployment Model&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment-content.png" alt="Content Browser" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 5. Content Browser&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_topology"&gt;Topology&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The topology view has been reintroduced to the management console. It was removed in the last versions due to performance issues with large domains. But thanks to new management operations, we were able to add this useful tool again.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/topology.png" alt="Topology" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 6. Topology&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_runtime"&gt;Runtime&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The lifecycle operations for hosts, server groups and servers have been improved. New operations are available for hosts and disconnected hosts are now shown in the finder columns. For servers you can specify custom URLs which is extremely useful when running WildFly inside a docker container.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/runtime.png" alt="Runtime" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 7. Runtime&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_monitor"&gt;Monitor&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The existing screens have been improved and many new subsystems have been added to the monitoring section. Some of the new and enhanced subsystems are:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Batch&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;EJB&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;IO&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JAX-RS&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Messaging&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Web (Undertow)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-server.png" alt="Monitor Server" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 8. Monitor Server&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-ejb.png" alt="EJB Subsystem" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 9. EJB Subsystem&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-jaxrs.png" alt="JAX-RS Resources" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 10. JAX-RS Resources&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-undertow.png" alt="Undertow Listener Statistics" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 11. Undertow Listener Statistics&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_involved"&gt;Get Involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to learn more about HAL, head over to &lt;a href="https://hal.github.io/" class="bare"&gt;https://hal.github.io/&lt;/a&gt;. The new website contains both end user and technical documentation. Read about HAL’s architecture, building blocks and how you can build, run and debug the console. HAL is an open source project and we love to receive &lt;a href="https://hal.github.io/contribute/"&gt;contributions&lt;/a&gt; from our community — you!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WbrQ46fTeXY" height="1" width="1" alt=""/&gt;</content><summary>WildFly 13 comes with a management console (HAL) which has been rewritten from scratch. HAL still uses a similar technical stack (GWT) and user experience, but now fully adopts PatternFly. More important we enhanced the existing features and added support for many new subsystems and attributes. The following sections show some highlights of the latest version. For more details about the new featur...</summary><dc:creator>Harald Pehl</dc:creator><dc:date>2018-06-01T18:00:00Z</dc:date><feedburner:origLink>http://wildfly.org/news/2018/06/01/Whats-New-In-HAL/</feedburner:origLink></entry><entry><title>An Introduction to Red Hat Application Migration Toolkit</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XjZh3wnZX4Q/" /><category term="Developer Tools" /><category term="Red Hat Application Migration Toolset" /><category term="Migration" /><category term="Red Hat Application Migration Toolkit" /><category term="Windup" /><author><name>Christian Huffman</name></author><id>https://developers.redhat.com/blog/?p=498977</id><updated>2018-06-01T16:00:06Z</updated><published>2018-06-01T16:00:06Z</published><content type="html">&lt;p&gt;[In case you aren&amp;#8217;t following the &lt;a href="https://middlewareblog.redhat.com/"&gt;Red Hat JBoss Middleware blog&lt;/a&gt;, we are reposting &lt;a href="https://middlewareblog.redhat.com/2018/05/24/an-introduction-to-red-hat-application-migration-toolkit/"&gt;An Introduction to Red Hat Application Migration Toolkit&lt;/a&gt; on developers.redhat.com.]&lt;/p&gt; &lt;p&gt;Application migration and modernization can be a daunting task. Not only do you have to update legacy applications with newer libraries and APIs, but often you must also address new frameworks, infrastructures, and architectures all while simultaneously keeping resources dedicated to new features and versions.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/"&gt;Red Hat Application Migration Toolkit&lt;/a&gt; (RHAMT), formerly known as Windup, provides a set of utilities for easing this process. Applications can be analyzed through a command-line interface (CLI), through a web-based interface, or directly inside Eclipse, allowing immediate modification of the source code.&lt;/p&gt; &lt;p&gt;These utilities allow you to quickly gain insights into thousands of your applications simultaneously. They identify migration challenges and code or dependencies shared between applications, and they accelerate making the necessary code changes to have your applications run in the latest middleware platforms.&lt;/p&gt; &lt;p&gt;&lt;span id="more-498977"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Choosing the Right Distribution&lt;/h2&gt; &lt;p&gt;You’ve read the introduction, possibly seen a video, and are eager to run your first application through the process. Where do you begin?&lt;/p&gt; &lt;p&gt;RHAMT provides a number of different distributions to meet your needs, and all include detailed reports that highlight migration issues with effort estimation. Each of these is summarized below.&lt;/p&gt; &lt;h2&gt;CLI&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-cli-4.0.1-offline.zip?sc_cid=7016000000154B7AAI"&gt;CLI Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/cli_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The CLI is a command-line tool that provides access to the reports without the overhead of the other tools. It includes a wide array of customization options, and it allows you to finely tune the RHAMT analysis options or integrate with external automation tools.&lt;/p&gt; &lt;h2&gt;Web Console&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-web-distribution-4.0.1-with-authentication.zip?sc_cid=7016000000154B7AAI"&gt;Web Console Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/web_console_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The web console is a web-based system that allows a team of users to assess and prioritize migration and modernization efforts. In addition, applications can be grouped into projects for analysis.&lt;/p&gt; &lt;h2&gt;Eclipse Plug-in&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-eclipse-plugin-repository-4.0.1.zip?sc_cid=7016000000154B7AAI"&gt;Eclipse Plug-in Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/eclipse_plugin_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Eclipse plug-in provides assistance directly in Eclipse and Red Hat JBoss Developer Studio (JBDS), and it allows developers to see migration issues directly in the source code. The Eclipse plug-in also provides guidance on resolving issues and offers automatic code replacement where possible.&lt;/p&gt; &lt;h2&gt;Start by Choosing a Distribution&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;If you’re working on a team that needs concurrent access to the reports, or you have a large number of applications to analyze, then choose the web console.&lt;/li&gt; &lt;li&gt;If you’re a developer familiar with Eclipse or JBDS and want live feedback, then start with the Eclipse plug-in.&lt;/li&gt; &lt;li&gt;Otherwise, we recommend starting with the CLI.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Follow the download link for the chosen distribution, and then examine the first few chapters in the appropriate guide to install and run the tool.&lt;/p&gt; &lt;h1&gt;Analyzing an Application&lt;/h1&gt; &lt;p&gt;Assume you have a local installation of RHAMT, located at RHAMT_HOME, and an application you want to analyze. For the purposes of this blog, we’ll also assume that you chose the CLI. With that out of the way, let’s get started.&lt;/p&gt; &lt;p&gt;The analysis is performed by calling &lt;code&gt;rhamt-cli&lt;/code&gt; and passing it in the application along with any desired options, as seen in the following example.&lt;/p&gt; &lt;pre&gt;$ bin/rhamt-cli --sourceMode --input /path/to/source_folder/ --output /path/to/output_folder/ --target eap7&lt;/pre&gt; &lt;p&gt;The options are straightforward:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;–sourceMode&lt;/code&gt; indicates the input files are source files instead of compiled binaries.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–input&lt;/code&gt; specifies the path to the file or directory containing the files to be analyzed.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–output&lt;/code&gt; specifies the path to the directory to contain the reports.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–target&lt;/code&gt; specifies the technology to migrate to; it is used to determine the rules for the analysis.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once the analysis finishes, a message will be seen in the console indicating the path to the report.&lt;/p&gt; &lt;p&gt;&lt;code&gt;Report created: /path/to/output_folder/index.html&lt;br /&gt; Access it at this URL: file:///path/to/output_folder/index.html&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;Rules&lt;/h1&gt; &lt;p&gt;All of RHAMT’s distributions utilize the same rules engine to analyze the APIs, technologies, and architectures used by the application you plan to migrate. This engine extracts files from archives, decompiles classes, scans and classifies file types, analyzes XML and other file content, analyzes application code, and then generates the reports.&lt;/p&gt; &lt;p&gt;Each of these actions is handled by defined rules, which consist of a set of actions to perform once conditions are met. We’ll look more in-depth at how rules work and at creating your own custom rules in a subsequent post, but for now, know that RHAMT includes a comprehensive set of standard migration rules to get you started.&lt;/p&gt; &lt;h1&gt;Just Want to &amp;#8220;Lift and Shift&amp;#8221;?&lt;/h1&gt; &lt;p&gt;Lifting and shifting, or &lt;i&gt;rehosting&lt;/i&gt;, an application is one possible first step in migrating it. This process involves moving the application onto a different target runtime or infrastructure. A common end goal of this stage is to make the smallest number of changes to have the application running successfully in a cloud environment.&lt;/p&gt; &lt;p&gt;Once the application is successfully running in the cloud, the next step is to modernize the application so that it’s natively designed for a cloud environment. Instead of simply rehosting the application, this step involves redesigning it, moving unnecessary dependencies and libraries outside the application.&lt;/p&gt; &lt;p&gt;Regardless of which step you’re at, RHAMT assists with both of these steps by providing a set of cloud-ready rules. Once executed against the application, a detailed report is created that indicates what changes should be made. For anyone familiar with using RHAMT to migrate middleware platforms, the process is similar: examine the report and adjust your application based on the feedback.&lt;/p&gt; &lt;p&gt;It’s that simple.&lt;/p&gt; &lt;h1&gt;Summary&lt;/h1&gt; &lt;p&gt;Wherever you are in the migration process, I’d recommend looking at RHAMT. It’s extremely simple to set up, and it comes with a number of default rules to assist in any part of the migration and modernization process. In addition, RHAMT facilitates solving unique problems once; after a given solution has been identified, a custom rule can be created to capture that solution, vastly simplifying the migration process.&lt;/p&gt; &lt;p&gt;Stay tuned for our next update, where we discuss how to create custom rules to better utilize RHAMT in your environment.&lt;/p&gt; &lt;h1&gt;References&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/?sc_cid=7016000000154B7AAI"&gt;Red Hat Application Migration Toolkit&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/?sc_cid=7016000000154B7AAI"&gt;Product Documentation for Red Hat Application Migration Toolkit&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;title=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" data-a2a-url="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/" data-a2a-title="An Introduction to Red Hat Application Migration Toolkit"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/"&gt;An Introduction to Red Hat Application Migration Toolkit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XjZh3wnZX4Q" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;[In case you aren&amp;#8217;t following the Red Hat JBoss Middleware blog, we are reposting An Introduction to Red Hat Application Migration Toolkit on developers.redhat.com.] Application migration and modernization can be a daunting task. Not only do you have to update legacy applications with newer libraries and APIs, but often you must also address new frameworks, infrastructures, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/"&gt;An Introduction to Red Hat Application Migration Toolkit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">498977</post-id><dc:creator>Christian Huffman</dc:creator><dc:date>2018-06-01T16:00:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/</feedburner:origLink></entry><entry><title>Shift Developer Conference 2018 - How to Jump Start a Career in Open Source (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Xl6KLpmXi6o/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-shift_developer_conference_2018_how_to_jump_start_a_career_in_open_source_slides</id><updated>2018-06-01T17:44:04Z</updated><published>2018-06-01T15:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s1600/shiftdev2018.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="shift developer" border="0" data-original-height="530" data-original-width="967" height="175" src="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s320/shiftdev2018.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;As &lt;a href="http://www.schabell.org/2018/05/shift-dev-2018-howto-jump-start-career-in-opensource.html" target="_blank"&gt;previously posted&lt;/a&gt;, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018.&lt;br /&gt;&lt;br /&gt;I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect in such a topic.&lt;br /&gt;&lt;br /&gt;My career in open source has been a long one and I think I've got a few good tips, tricks and pieces of advice based on what's worked on this long and wonderful journey.&lt;br /&gt;&lt;br /&gt;Take a look at the slides, see if you can find a way to jump start your career in open source?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;As a bit of a review, the abstract:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://shiftconf.co/#schedule" target="_blank"&gt;How To Jump Start a Career in Open Source&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;It's not magic. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;And the slides:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/DBg9ePKP1x4rQ9" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;Hope you enjoyed the talk, see you again next time!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/a8xyzgebtIU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Xl6KLpmXi6o" height="1" width="1" alt=""/&gt;</content><summary>As previously posted, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018. I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-06-01T15:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/a8xyzgebtIU/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html</feedburner:origLink></entry><entry><title>This week in JBoss (31 May 2018)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SdTsH85GTlE/this-week-in-jboss-31-may-2018" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="hibernate-search" scheme="searchisko:content:tags" /><category term="jboss weekly" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_31_may_2018</id><updated>2018-05-31T23:21:44Z</updated><published>2018-05-31T23:21:44Z</published><content type="html">&lt;!-- [DocumentBodyStart:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;This is a smaller editorial this week, but by no means does that mean we haven&amp;#8217;t been busy!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/28/hibernate-orm-531-final-release/" rel="nofollow"&gt;Hibernate 5.3.1&lt;/a&gt; is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/29/hibernate-search-5-10-1-Final-5-9-2-Final-5-6-5-Final/" rel="nofollow"&gt;Hibernate Search triple release&lt;/a&gt;: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/" rel="nofollow"&gt;Wildfly 13 Baker&amp;#8217;s Dozen&lt;/a&gt; brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://middlewareblog.redhat.com/2018/05/24/an-introduction-to-red-hat-application-migration-toolkit/" rel="nofollow"&gt;Introduction to Red Hat Application Migration Toolkit&lt;/a&gt;. Christian Huffman explores RHAMT and explains how to get started with it to help you migrate your application to Red Hat Enterprise Application Platform.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Doug Tidwell did a great explanation about creating production-ready containers, read the blog at &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" rel="nofollow"&gt;https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Matthias Wessendorf introduces the new &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/" rel="nofollow"&gt;Kafka CDI Library&lt;/a&gt; over at the Red Hat Developers Blog. This looks like it will be a great library for doing Kafka events with CDI!&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;As stated, this was a smaller one this week, but still, some great stuff happening! Everyone have a happy summer!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SdTsH85GTlE" height="1" width="1" alt=""/&gt;</content><summary>This is a smaller editorial this week, but by no means does that mean we haven’t been busy! Releases Hibernate 5.3.1 is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation. Hibernate Search triple release: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final Wildfly 13 Baker’s Dozen brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification. Blogs Intr...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2018-05-31T23:21:44Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/05/31/this-week-in-jboss-31-may-2018</feedburner:origLink></entry><entry><title>Red Hat Summit: Building production-ready containers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ayWrMJ1HgEw/" /><category term="Containers" /><category term="Red Hat OpenShift Container Platform" /><category term="Red Hat Summit" /><author><name>Doug Tidwell</name></author><id>https://developers.redhat.com/blog/?p=495767</id><updated>2018-05-31T15:00:00Z</updated><published>2018-05-31T15:00:00Z</published><content type="html">&lt;p&gt;Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year&amp;#8217;s Red Hat Summit with a discussion of best practices for production-ready containers.&lt;/p&gt; &lt;p&gt;In the container era, Scott pointed out there are four building blocks you need to think about:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Container images&lt;/li&gt; &lt;li&gt;Container hosts&lt;/li&gt; &lt;li&gt;Container orchestration&lt;/li&gt; &lt;li&gt;Registry servers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each of these topics is a huge rabbit hole you can go down if you want to really learn all there is to know about them. As you&amp;#8217;d expect from the session title, Scott and Ben focused on container images. Despite that, you still have to consider the other three. How will your images interact with others? How will you get data to them? How will they interact with each other? Will you embed passwords in your images? (Spoiler alert: &lt;em&gt;No.&lt;/em&gt;) You need to take all of these things into consideration as you move into the world of containers.&lt;/p&gt; &lt;p&gt;A single container is about as useful as a single Lego block&lt;a href="#link1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. You need to tie lots of them together in interesting ways to get the full power of containers behind you. Scott quoted Red Hat&amp;#8217;s Ryan Hallisey:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Using containers is as much of a business advantage as a technical one. When building and using containers, layering is crucial. You need to look at your application and think about each of the pieces and how they work together–similar to the way you can break a program up into classes and functions.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;If you&amp;#8217;re building a Lego model, you take an instruction sheet and a set of building blocks and create something from them. In the world of containers, you take instructions (YAML) and building blocks (images) and create an application from them.&lt;/p&gt; &lt;p&gt;The goal of the &lt;a href="https://www.opencontainers.org"&gt;Open Container Initiative (OCI)&lt;/a&gt; is to define standards for containers and runtimes. (Members include Red Hat, CoreOS, and pretty much every other player in the industry.) If you&amp;#8217;re an architect, OCI protects your investment because you can create images once and know you can use them for the foreseeable future&lt;a href="#link2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; and know that the tooling and the distribution and logistics mechanisms and the registry server will still exist and will still work.&lt;/p&gt; &lt;p&gt;As the old joke goes, the great thing about standards is that you have so many to choose from&lt;a href="#link3"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. Scott mentioned five relevant standards that are being driven by vendors, communities, and standards bodies:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/kubernetes/kubernetes/blob/242a97307b34076d5d8f5bbeb154fa4d97c9ef1d/docs/devel/container-runtime-interface.md"&gt;Container Runtime Interface&lt;/a&gt; (from Kubernetes)&lt;/li&gt; &lt;li&gt;The &lt;a href="https://www.cncf.io/blog/2017/05/23/cncf-hosts-container-networking-interface-cni/"&gt;Container Network Interface&lt;/a&gt; (from the Cloud Native Computing Foundation)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When you&amp;#8217;re running a container, there&amp;#8217;s an image, there&amp;#8217;s a registry, and there&amp;#8217;s a host. With the Distribution spec, you&amp;#8217;re protected if you put your images in an Amazon registry, an Azure registry, a Red Hat-provided registry, etc. You can move that image around and run it in another environment.&lt;/p&gt; &lt;p&gt;Scott mentioned a number of tools that are emerging as the standards become more entrenched. The community created &lt;a href="https://github.com/kubernetes-incubator/cri-tools"&gt;crictl&lt;/a&gt; for the CRI standard. &lt;a href="https://www.projectatomic.io/blog/2018/02/reintroduction-podman/"&gt;Podman&lt;/a&gt; (&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/release_notes/technology_previews"&gt;now available as a tech preview&lt;/a&gt;) offers an experience similar to the Docker command line. &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; is a command-line tool to run containers according to the OCI runtime spec. Project Atomic created the &lt;a href="https://www.projectatomic.io/blog/2017/11/getting-started-with-buildah/"&gt;Buildah&lt;/a&gt; tool to build OCI-compliant images. What&amp;#8217;s great about Buildah is that it will work with your &lt;code&gt;Dockerfile&lt;/code&gt;s. Buildah lets you add packages into the image when you build it, so that your final container doesn&amp;#8217;t have to have a package manager. And of course you can use these tools in a toolchain.&lt;/p&gt; &lt;p&gt;Scott made the point that the Docker commands related to images actually work with repositories, not images. For example, this command:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;code&gt;docker pull registry.access.redhat.com/rhel7/rhel:latest&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;goes to the registry at &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, then looks in the &lt;code&gt;rhel7&lt;/code&gt; namespace, then looks for a repository named &lt;code&gt;rhel&lt;/code&gt;, then takes the version of that image with the tag &lt;code&gt;latest&lt;/code&gt;&lt;a href="#link4"&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;. The hierarchy here is &lt;code&gt;registry server/namespace/repo:tag&lt;/code&gt;. The registry server is resolved by DNS, but the namespace can mean different things depending on the registry server. At &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, the namespace is the product name. At Dockerhub, the namespace is the name of the user who committed the image. In creating images in your own registry, it&amp;#8217;s important to think through what the different components of the name mean. How will your organization use namespaces? How will you name your repos? (A bit of advice from Scott: always use the full URL of the image in your &lt;code&gt;Dockerfile&lt;/code&gt; to make sure you&amp;#8217;re getting exactly what you expect.)&lt;/p&gt; &lt;p&gt;Note: If you&amp;#8217;d like to get a better handle on registries vs. repos and develop a deeper understanding of containers, check out Scott&amp;#8217;s article: &lt;a href="https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction/"&gt;&lt;em&gt;A Practical Introduction to Container Terminology&lt;/em&gt;&lt;/a&gt;. That article, published in February of 2018 on &lt;a href="https://developers.redhat.com/blog"&gt;developers.redhat.com/blog&lt;/a&gt;, is a complete update of Scott&amp;#8217;s popular article from 2016.  The 2018 version includes a lot of what is happening in the world of containers beyond docker.&lt;/p&gt; &lt;p&gt;Next Ben took over to discuss his tenets for building images. He stressed that you should use source control for everything so that all of your artifacts are buildable from code. His five basic principles for building production-ready containers are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Standardize&lt;/li&gt; &lt;li&gt;Minimize storage&lt;/li&gt; &lt;li&gt;Delegate&lt;/li&gt; &lt;li&gt;Process&lt;/li&gt; &lt;li&gt;Iterate&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We&amp;#8217;ll discuss these over the next few paragraphs.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Standardize:&lt;/em&gt; Your goal should be to have a standard set of images with a common lineage. Your base images will be things like application frameworks, app servers, databases, and other middleware. The obvious benefits here are that your images are easier to scale, reuse of common layers is maximized, and the differences between environments in your various containers are minimized. The size of registries can be a problem, especially with thousands of developers constantly cranking out images as toolchains and build pipelines do their magic. Standardizing on as few images as possible has huge benefits in your registry, at runtime, and whenever you need to update a base image. (Red Hat encourages you to use our base images, especially the LTS images.)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Minimize storage:&lt;/em&gt; The goal is to limit the content in a given image, particularly a base image, so that it only has what you&amp;#8217;re using. Red Hat provides an image named &lt;a href="https://access.redhat.com/containers/?tab=overview#/registry.access.redhat.com/rhel7-atomic"&gt;rhel7-atomic&lt;/a&gt; (not to be confused with &lt;a href="https://www.projectatomic.io"&gt;Project Atomic&lt;/a&gt;). This image has &lt;code&gt;glibc&lt;/code&gt; and just enough &lt;code&gt;rpm&lt;/code&gt; to add packages. There is no &lt;code&gt;python&lt;/code&gt;, no &lt;code&gt;systemd&lt;/code&gt;, or similar things that you probably don&amp;#8217;t need. Remember, with an image, you&amp;#8217;re building a sandbox. If your sandbox is the size of a stadium parking lot, it&amp;#8217;s not a sandbox anymore.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Delegate:&lt;/em&gt; Ownership of an image should lie with the people who have the most expertise for that image, whatever it contains. Don&amp;#8217;t be a hero; don&amp;#8217;t be responsible for every image in your organization. Leverage your team&amp;#8217;s skills.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Focus on process and automation:&lt;/em&gt; This is the most important rule. The barrier to getting started with containers is really low. It&amp;#8217;s not that much trouble to create a &lt;code&gt;Dockerfile&lt;/code&gt; and run &lt;code&gt;docker build&lt;/code&gt;. That means it&amp;#8217;s simple to do something once and never think about it again. But containers are not &amp;#8220;fire and forget.&amp;#8221; You need process around them for everything from testing to deployment to security. Ben mentioned tools like &lt;a href="https://www.open-scap.org"&gt;OpenSCAP&lt;/a&gt; and &lt;a href="https://coreos.com/clair/docs/latest/"&gt;Clair&lt;/a&gt; that can scan your images for vulnerabilities.&lt;a href="#link5"&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Iterate&lt;/em&gt; is the final goal. Don&amp;#8217;t repeat the mistakes of the past. Making changes is no longer a big deal. If you have testing and security scanning as part of your build chain, then you go from &amp;#8220;known good&amp;#8221; to &amp;#8220;known good&amp;#8221; every single time.&lt;/p&gt; &lt;p&gt;The image a developer has on her laptop should be the same as the image in the dev/test environment, which should be the same as the image in production in the cloud. (BTW, the term &amp;#8220;developer&amp;#8221; here really means &amp;#8220;anybody who builds an image.&amp;#8221; That could include sys admins or architects or others.) As you distribute an image, the YAML file that defines persistent volumes, secrets, scaling policies, and other metadata should go along with it as well.&lt;/p&gt; &lt;p&gt;Finally, Ben made the point that you need to be building images in a system that has a pipeline. You can build images on your local machine for &lt;a href="https://en.wikipedia.org/wiki/Smoke_testing_(software)"&gt;smoke testing&lt;/a&gt;, but any changes that are significant should be run through the pipeline. It&amp;#8217;s crucial to remember that you can&amp;#8217;t just fire up Docker on a laptop and test your image. To do test anything significant, you&amp;#8217;ll need an environment that can start a Kubernetes cluster, pull down all the images that run together in production, and then start the pipeline. Nobody wants to run a whole orchestrated system on their laptops, but that&amp;#8217;s the only way you can reliably test a set of services that work together.&lt;/p&gt; &lt;p&gt;The hallmark of a great piece of code is not just that it works, but that its architecture is elegant, intuitive, and flexible. Most experienced developers know how to do that. As we go forward, the ability to create a set of elegantly composed containers will be an essential skill. The right amount of functionality in each container, hierarchies of containers that simplify changes and upgrades, and the appropriate use of pipelines are all part of a production-ready, containerized application.&lt;/p&gt; &lt;p&gt;All in all, a great session with lots of best practices and good advice from two highly experienced speakers. If you&amp;#8217;d like to hear all the details, the &lt;a href="https://youtu.be/nizud-1IK9c"&gt;video of Scott and Ben&amp;#8217;s presentation&lt;/a&gt; is one of the &lt;a href="https://developers.redhat.com/blog/2018/05/15/100-red-hat-summit-2018-session-videos-online/"&gt;100+ Red Hat Summit 2018 breakout sessions&lt;/a&gt; you can view online for free&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/nizud-1IK9c?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;a name="link1"&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; Containers on a container ship fit together like Lego blocks, if you think about it. Makes the metaphor even stronger.&lt;/p&gt; &lt;p&gt;&lt;a name="link2"&gt;&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; Which is maybe a couple of years. Seriously, how many things do you do today that you didn&amp;#8217;t do in 2015?&lt;/p&gt; &lt;p&gt;&lt;a name="link3"&gt;&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt; I didn&amp;#8217;t say the joke was funny, I just said it was old. Sorry about that.&lt;/p&gt; &lt;p&gt;&lt;a name="link4"&gt;&lt;/a&gt;&lt;sup&gt;4&lt;/sup&gt; Keep in mind that the tag &amp;#8220;latest&amp;#8221; is just a convention. It may or may not point to the most recent version of the image.&lt;/p&gt; &lt;p&gt;&lt;a name="link5"&gt;&lt;/a&gt;&lt;sup&gt;5&lt;/sup&gt; Ben recommended reading &lt;a href="https://itrevolution.com/wp-content/uploads/files/PhoenixProjectExcerpt.pdf"&gt;&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/a&gt; as a cautionary tale.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;title=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" data-a2a-url="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" data-a2a-title="Red Hat Summit: Building production-ready containers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/"&gt;Red Hat Summit: Building production-ready containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ayWrMJ1HgEw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year&amp;#8217;s Red Hat Summit with a discussion of best practices for production-ready containers. In the container era, Scott pointed out there are four building blocks you need to think about: Container images Container hosts [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/"&gt;Red Hat Summit: Building production-ready containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">495767</post-id><dc:creator>Doug Tidwell</dc:creator><dc:date>2018-05-31T15:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/</feedburner:origLink></entry><entry><title>Introducing the Kafka-CDI Library</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rdmbSfcmg6g/" /><category term="Java" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Container Platform" /><category term="Apache Kafka" /><category term="big data" /><category term="event-driven applications" /><category term="event-driven architecture" /><category term="Kafka streams" /><category term="Kafka-CDI" /><category term="microservices" /><author><name>Matthias Wessendorf</name></author><id>https://developers.redhat.com/blog/?p=497637</id><updated>2018-05-31T09:00:54Z</updated><published>2018-05-31T09:00:54Z</published><content type="html">&lt;p&gt;Using Apache Kafka in modern event-driven applications is pretty popular. For a better &lt;em&gt;cloud-native&lt;/em&gt; experience with Apache Kafka, it&amp;#8217;s highly recommended to check out Red Hat &lt;a href="https://developers.redhat.com/blog/2018/05/07/announcing-amq-streams-apache-kafka-on-openshift/" rel="nofollow"&gt;AMQ Streams&lt;/a&gt;, which offers an easy installation and management of an Apache Kafka cluster on Red Hat OpenShift.&lt;/p&gt; &lt;p&gt;This article shows how the Kafka-CDI library can handle difficult setup tasks and make creating Kafka-powered event-driven applications for MicroProfile and Jakarta EE very easy.&lt;/p&gt; &lt;p&gt;&lt;span id="more-497637"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Vanilla Apache Kafka Consumers&lt;/h2&gt; &lt;p&gt;While the concepts of Kafka producers and consumers are simple, writing the actual code can be quiet cumbersome and requires some boilerplate code such as the following:&lt;/p&gt; &lt;pre&gt;final Properties props = new Properties(); props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "my-cluster-kafka:9092"); props.put(ConsumerConfig.GROUP_ID_CONFIG, "demo-group"); props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class); props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class); final KafkaConsumer&amp;#60;String, String&amp;#62; consumer = new KafkaConsumer(props); ... consumer.subscribe(Collections.singleton("topic")); ... final ConsumerRecords&amp;#60;String, String&amp;#62; records = consumer.poll(500); for (final ConsumerRecord&amp;#60;String, String&amp;#60;&amp;#62; record : records) { logger.info(record.value()); } &lt;/pre&gt; &lt;p&gt;The above code shows a simple configuration of a &lt;code&gt;KafkaConsumer&lt;/code&gt;, which leaves the developer with a few tasks such as manually defining the actual type of the key and the value of the consumed record. Besides that, the consumers are also not thread-safe and the developer needs to take care of that using Java concurrency APIs.&lt;/p&gt; &lt;h2&gt;CDI Extensions to the Rescue&lt;/h2&gt; &lt;p&gt;In various enterprise Java communities, such as &lt;a href="https://microprofile.io/" rel="nofollow"&gt;Eclipse MicroProfile&lt;/a&gt; or &lt;a href="https://jakarta.ee/" rel="nofollow"&gt;Jakarta EE&lt;/a&gt;, CDI is the natural choice for managing dependencies and their configuration. The API also allows developers to create extensions that can leverage the entire &amp;#8220;Java EE&amp;#8221; lifecycle and its powerful platform APIs as well.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://github.com/aerogear/kafka-cdi"&gt;Kafka-CDI&lt;/a&gt; library from the AeroGear project is such an extension, and it makes creating Kafka-powered applications for MicroProfile or Jakarta EE very easy.&lt;/p&gt; &lt;h2&gt;Kafka-CDI in Action&lt;/h2&gt; &lt;p&gt;The setup is simple and requires just a few lines of Maven coordinates:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.aerogear.kafka&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;kafka-cdi-extension&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;0.1.0&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;h2&gt;Consumers with CDI&lt;/h2&gt; &lt;p&gt;Creating CDI-managed beans that act as message consumers is now quite easy and requires only a small bit of code:&lt;/p&gt; &lt;pre&gt;@KafkaConfig(bootstrapServers ="#{KAFKA_SERVICE_HOST}:#{KAFKA_SERVICE_PORT}") public class MyAwesomeConsumer { private static final Logger LOGGER = LoggerFactory.getLogger(MyAwesomeConsumer.class); @Consumer(topics = "topic", groupId = "demo-group") public void onMessage(final String key, final String value) { LOGGER.info("We got this value: " + value); } }&lt;/pre&gt; &lt;p&gt;With a single &lt;code&gt;@Consumer&lt;/code&gt; annotation, the bean is turned into a message consumer. The Kafka-CDI extension handles all the configuration, such as the type deserialization for the key and value of the Kafka record, as well as the threading behind the scenes. For each application, one &lt;code&gt;KafkaConfig&lt;/code&gt; annotation is needed to identify the list of available bootstrap servers. The values for &lt;code&gt;topic&lt;/code&gt;, &lt;code&gt;groupId&lt;/code&gt;, and &lt;code&gt;bootstrapServers&lt;/code&gt;, as in this example, can be resolved using environment variables or system properties.&lt;/p&gt; &lt;h2&gt;Producers with CDI&lt;/h2&gt; &lt;p&gt;Writing producers is easy as well:&lt;/p&gt; &lt;pre&gt;@Producer private SimpleKafkaProducer&amp;#60;String, String&amp;#62; myproducer; ... myproducer.send("topic", myKey, myValue); &lt;/pre&gt; &lt;p&gt;Any bean can be injected with a convenient producer (&lt;code&gt;SimpleKafkaProducer&lt;/code&gt;) that can be used in any method for sending messages to the Kafka cluster. Similar to the consumer example, the CDI extension handles the type serialization for the key and value.&lt;/p&gt; &lt;h2&gt;KStreams with CDI&lt;/h2&gt; &lt;p&gt;Last but not least, the library has some initial support for working with the &lt;a href="http://kafka.apache.org/11/documentation/streams/" rel="nofollow"&gt;Kafka Streams&lt;/a&gt; API:&lt;/p&gt; &lt;pre&gt;@KafkaStream(input = "input.topic", output = "output.topic") public KTable&amp;#60;String, Long&amp;#62; successfullMessagesPerJobTransformer(KStream&amp;#60;String, String&amp;#62; source) { return successCountsPerJob = source.filter((key, value) -&amp;#62; value.equals("Success")) .groupByKey() .count("successCounter"); }&lt;/pre&gt; &lt;p&gt;When a method is annotated with &lt;code&gt;@KafkaStream&lt;/code&gt;, the library processes the passed &lt;code&gt;KStream&lt;/code&gt; object by executing the annotated method. The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; attributes from the &lt;code&gt;@KafkaStream&lt;/code&gt; annotation tell the library which topic to read from and which topic the stream processing job should be written to. The type serialization and deserialization are again handled by the framework for the convenience of the developer.&lt;/p&gt; &lt;h2&gt;Supported Types&lt;/h2&gt; &lt;p&gt;The library  supports various ways for JSON serialization and deserialization. It comes with &lt;code&gt;Serializer&lt;/code&gt; and &lt;code&gt;Deserializer&lt;/code&gt; for the &lt;code&gt;javax.json.Json&lt;/code&gt; type, and it has a fallback mechanism to automatically use the Jackson library for any unknown type. Support for Apache Avro is not yet implemented but that is on the roadmap of features.&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;This article was an introduction to the Kafka-CDI library in action. Only a few lines of code are required to get started with the library. The focus is on user simplicity, while all the difficult setup tasks are handled by the CDI extension.&lt;/p&gt; &lt;p&gt;Using the library, it&amp;#8217;s a no-brainer to write event-driven applications using MicroProfile implementations such &lt;a href="https://thorntail.io/" rel="nofollow"&gt;Thorntail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Thanks to Gunnar Morling for valuable input!&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;linkname=Introducing%20the%20Kafka-CDI%20Library" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fintroducing-the-kafka-cdi-library%2F&amp;#38;title=Introducing%20the%20Kafka-CDI%20Library" data-a2a-url="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/" data-a2a-title="Introducing the Kafka-CDI Library"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/"&gt;Introducing the Kafka-CDI Library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rdmbSfcmg6g" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Using Apache Kafka in modern event-driven applications is pretty popular. For a better cloud-native experience with Apache Kafka, it&amp;#8217;s highly recommended to check out Red Hat AMQ Streams, which offers an easy installation and management of an Apache Kafka cluster on Red Hat OpenShift. This article shows how the Kafka-CDI library can handle difficult setup tasks and make [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/"&gt;Introducing the Kafka-CDI Library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">497637</post-id><dc:creator>Matthias Wessendorf</dc:creator><dc:date>2018-05-31T09:00:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/</feedburner:origLink></entry><entry><title>WildFly 13 "Baker’s Dozen" is released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z6WfihGothk/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_wildfly" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Jason Greene</name></author><id>searchisko:content:id:jbossorg_blog-wildfly_13_baker_s_dozen_is_released</id><updated>2018-06-01T17:20:55Z</updated><published>2018-05-31T03:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;WildFly 13 Final is now available &lt;a href="http://wildfly.org/downloads"&gt;for download&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_ee8_capabilities_new_release_model"&gt;EE8 Capabilities &amp;amp; New Release Model&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is our second release following our &lt;a href="http://lists.jboss.org/pipermail/wildfly-dev/2017-December/006250.html"&gt;new quarterly delivery model&lt;/a&gt;. A central theme of this plan, is to deliver EE8 functionality in fully completed incremental chunks, as opposed to waiting for everything to finish in a big bang relase. WildFly 13 largely accomplishes this goal, by achieving EE8 feature completeness. WildFly 14 will focus on achieving formal certification, and converting over to a sole EE8 execution model. Since Java EE8 is fully backwards compatible, EE7 deployments will still function ast they do today.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;An overview of all changes for the EE8 execution mode are as follows:&lt;/p&gt; &lt;/div&gt; &lt;table class="tableblock frame-all grid-all spread"&gt; &lt;colgroup&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;col style="width: 20%;" /&gt; &lt;/colgroup&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class="tableblock halign-left valign-top"&gt;Name&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;From Version&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;From JSR&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;To Version&lt;/th&gt; &lt;th class="tableblock halign-left valign-top"&gt;To JSR&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java Servlet&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;3.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-340&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;4.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=370"&gt;JSR-369&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Contexts and Dependency Injection for Java&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-346&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=365"&gt;JSR-365&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Bean Validation&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-349&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=380"&gt;JSR-380&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JavaServer Faces&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-344&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.3&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=372"&gt;JSR-372&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JavaMail&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.5&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-919&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.6&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=919"&gt;JSR-919&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for RESTFul Web Services&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-339&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=370"&gt;JSR-370&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for JSON Processing&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-353&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=374"&gt;JSR-374&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java API for JSON Binding&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=367"&gt;JSR-367&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Common Annotations for the Java Platform&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-250&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.3&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="http://download.oracle.com/otndocs/jcp/common_annotations-1_3-mrel3-spec/"&gt;JSR-250&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java EE Security&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;-&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;1.0&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=375"&gt;JSR-375&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;Java Persistence&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.1&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;JSR-338&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;2.2&lt;/p&gt;&lt;/td&gt; &lt;td class="tableblock halign-left valign-top"&gt;&lt;p class="tableblock"&gt;&lt;a href="https://jcp.org/en/jsr/detail?id=338"&gt;JSR-338&lt;/a&gt;&lt;/p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default WildFly 13 launches in EE7 mode. In order to use these new capabilities you have to enable EE8 preview mode. This can be accomplished by passing the &lt;code&gt;ee8.preview.mode&lt;/code&gt; property during startup:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;./standalone.sh -Dee8.preview.mode=true&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Alternatively, this can be achieved by launching the server using the new &lt;code&gt;standalone-ee8.xml&lt;/code&gt; configuration, which simply includes the property in the config.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;./standalone.sh -c standalone-ee8.xml&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The CLI can also be used to modify the existing configuration to add this property. For example:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;embed-server --admin-only=true /system-property=ee8.preview.mode:add(value=true) stop-embedded-server&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_other_notable_items"&gt;Other Notable Items&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;WildFly 13 is now internally built using project Galleon, a new provisioning model for WildFly we plan to roll out in coming releases&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Java 10 compatibilty has been improved&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A major upgrade to the WildFly administration console (HAL version 3)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan has been updated to 9.2&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Hibernate ORM has been updated to 5.3 when running in EE8 mode&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_jira_release_notes"&gt;Jira Release Notes&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The full list of issues resolved is available &lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12313721&amp;amp;version=12335641"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z6WfihGothk" height="1" width="1" alt=""/&gt;</content><summary>WildFly 13 Final is now available for download! EE8 Capabilities &amp; New Release Model This is our second release following our new quarterly delivery model. A central theme of this plan, is to deliver EE8 functionality in fully completed incremental chunks, as opposed to waiting for everything to finish in a big bang relase. WildFly 13 largely accomplishes this goal, by achieving EE8 feature comple...</summary><dc:creator>Jason Greene</dc:creator><dc:date>2018-05-31T03:00:00Z</dc:date><feedburner:origLink>http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/</feedburner:origLink></entry><entry><title>WildFly 13 released, featuring all latest Hibernate versions!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/d2Ju2Q8DTAs/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Sanne Grinovero</name></author><id>searchisko:content:id:jbossorg_blog-wildfly_13_released_featuring_all_latest_hibernate_versions</id><updated>2018-05-31T14:34:33Z</updated><published>2018-05-31T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Last night the modern JakartaEE server WildFly &lt;a href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/"&gt;released the 13th version&lt;/a&gt; and among the list of enhancements you can find an update to all included Hibernate libraries.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Actually it includes both sets of old and new versions of Hibernate libraries!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;WildFly 13, like version 12, aims at JavaEE 7 certification so if you start it via its default configuration you will get the old set of Hibernate libraries: Hibernate ORM &lt;code&gt;5.1.x&lt;/code&gt; to implement the &lt;code&gt;JPA 2.1&lt;/code&gt; specification, the older matching Hibernate Search, and the old Hibernate Validator providing the &lt;code&gt;Bean Validation 1.1&lt;/code&gt; implementation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The full JavaEE 8 server is expected to be implemented by WildFly 14 - however the version released today can give you a taste of most of the EE8 implementations already by enabling a flag:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;./standalone.sh -Dee8.preview.mode=true&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Especially if you don’t care about an all-or-nothing approach and are good with having a combination of some specifications at EE7 and some others at EE8, this means you can start benefiting from the new features today!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="new-hibernate-versions-in-the-ee8-preview-mode"&gt;&lt;a class="anchor" href="#new-hibernate-versions-in-the-ee8-preview-mode"&gt;&lt;/a&gt;New Hibernate versions in the "EE8 Preview Mode"&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When enabling the &lt;code&gt;ee8.preview.mode=true&lt;/code&gt; property, rather than the old stack your applications will get the latest Hibernate libraries, freshly released just some days ago.&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;Hibernate ORM 5.3.1.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Implements JPA 2.2, and &lt;a href="http://in.relation.to/2018/05/14/hibernate-orm-530-final-release/"&gt;a whole lot of improvements across the board: new features, enhanced performance&lt;/a&gt;.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Hibernate Search 5.10.1.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;While the main reason to update it is to align dependencies with Hibernate ORM, it implies lots of improvements as we jump from versions &lt;code&gt;5.5&lt;/code&gt; to &lt;code&gt;5.10&lt;/code&gt;. In particular Hibernate Search now features &lt;a href="https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#elasticsearch-integration"&gt;Elasticsearch integration&lt;/a&gt;. This integration is not included in WildFly but can be easily added - we’ll follow up with detailed instructions soon.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Hibernate Validator 6.0.10.Final&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Reference implementation of the &lt;a href="http://beanvalidation.org/"&gt;Bean Validation 2.0&lt;/a&gt; specification, bringing &lt;a href="http://in.relation.to/2017/08/07/and-here-comes-hibernate-validator-60/"&gt;among other features&lt;/a&gt; container element constraints and &lt;a href="http://in.relation.to/2018/03/20/bean-validation-benchmark-rerevisited/"&gt;massive performance improvements&lt;/a&gt;.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="what-about-hibernate-ogm"&gt;&lt;a class="anchor" href="#what-about-hibernate-ogm"&gt;&lt;/a&gt;What about Hibernate OGM?&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate OGM is not included in WildFly but - as usual - we release "feature packs" to make it easy to add it yourself.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Similar feature packs exist already but they target WildFly 12, we will update the project to target WildFly 13 soon so watch this space!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="your-help-is-needed"&gt;&lt;a class="anchor" href="#your-help-is-needed"&gt;&lt;/a&gt;Your help is needed!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While we’re very excited that WildFly users can finally benefit from the result of the last few years of work of the Hibernate community, we’re not off the hook yet:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;enabling the &lt;em&gt;ee8.preview.mode=true&lt;/em&gt; switch is clearly meant to be a preview.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve been working hard to make it easy to update existing applications to the latest Hibernate versions: please follow the respective migration guides for the essential steps, yet if you end up having trouble please let us know!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can ask on the &lt;a href="https://discourse.hibernate.org/"&gt;new forums&lt;/a&gt;, or create an issue on &lt;a href="https://hibernate.atlassian.net"&gt;JIRA&lt;/a&gt;. If you could check for existing and similar issues to avoid duplicates and provide details / reproducers / a test that’s incredibily helpful!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/d2Ju2Q8DTAs" height="1" width="1" alt=""/&gt;</content><summary>Last night the modern JakartaEE server WildFly released the 13th version and among the list of enhancements you can find an update to all included Hibernate libraries. Actually it includes both sets of old and new versions of Hibernate libraries! WildFly 13, like version 12, aims at JavaEE 7 certification so if you start it via its default configuration you will get the old set of Hibernate librar...</summary><dc:creator>Sanne Grinovero</dc:creator><dc:date>2018-05-31T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/05/31/WildFly13IntegratedLatestHibernate/</feedburner:origLink></entry><entry><title>Adding API Gateway Policies Now Easier With Red Hat 3scale API Management</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EHDaF4zSqVg/" /><category term="Integration" /><category term="Products" /><category term="Red Hat 3scale API Management" /><category term="3scale" /><category term="Agile Integration" /><category term="api gateway" /><category term="API-Management" /><author><name>Hugo Guerrero</name></author><id>https://developers.redhat.com/blog/?p=498317</id><updated>2018-05-30T16:00:32Z</updated><published>2018-05-30T16:00:32Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;With the May 2018 release of Red Hat 3scale API Management 2.2, adding API Gateway policies to your API management layer is easier than ever. &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;What is a Policy?&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat 3scale API Management provides units of functionality that modify the behavior of the API Gateway without the need to implement code. These management components are know in 3scale as &lt;b&gt;policies&lt;/b&gt;. The configuration for the bundled policies is available from the API Manager Portal, where you can define the behavior of your API integration. The order in which the policies are executed, known as the “policy chain”, can be configured to introduce differing behavior based on the position of the policy in the chain. Adding custom headers, perform URL rewriting, enable CORS, and configurable caching are some of the most common API gateway capabilities implemented as policies.&lt;/span&gt;&lt;span id="more-498317"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img class=" aligncenter size-full wp-image-498437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies.png 714w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/API-Gateway-Policies-300x225.png 300w" sizes="(max-width: 714px) 100vw, 714px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There are various policies available out-of-the-box with 3scale, but you are not limited to those. With 3scale you have complete access to the gateway policy framework to write custom code that implements new API Gateway features on top of the basic APIcast policy built-in to the API Management.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img class="size-large aligncenter" src="https://access.redhat.com/webassets/avalon/d/Red_Hat_3scale-2.2-API_Devops-en-US/images/1a3aee4bf1ea3193cc7807966bde2291/policyChainOverview.png" alt="3scale standard policies" width="1970" height="632" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;3scale Standard Policies&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat 3scale API Management provides a number of standard policies:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;CORS: &lt;span style="font-weight: 400;"&gt;Cross Origin Resource Sharing (CORS) request handling policy—allows you to control CORS behavior&lt;/span&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;URL rewriting:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Allows you to modify the path of a request using the OpenResty web platform sub and gsub operations.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Echo:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Prints an incoming request back to the client, along with an optional HTTP status code.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Adding headers:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;  Headers policy allows you to modify existing headers or define additional headers to add to or remove from an incoming request or response.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Upstream:&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Allows you to parse a host request header using regular expressions and replace the request header URL with a new URL.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;SOAP: &lt;/b&gt;&lt;span style="font-weight: 400;"&gt;The SOAP policy matches SOAP action URIs provided in the SOAPAction or Content-Type header of an HTTP request with mapping rules specified in the policy.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Offline operation communication: &lt;/b&gt;&lt;span style="font-weight: 400;"&gt; The authentication caching policy caches authentication calls made to the API Gateway. You can configure how the cache operates by selecting an operating mode.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Benefits&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The benefits of 3scale API management&amp;#8217;s modular policy are:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Configuration by data, not code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Capability to add gateway logic with new policies for any phase of the request cycle&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Better extensibility&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improved maintainability&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Leverage of community contributions&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Hence, take a look at the following video. It shows an overview on how to enable standard policies in 3scale API Management.&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/836_E_2zZfg?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;linkname=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F30%2F3scale-api-gateway-policies%2F&amp;#38;title=Adding%20API%20Gateway%20Policies%20Now%20Easier%20With%20Red%20Hat%203scale%20API%20Management" data-a2a-url="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/" data-a2a-title="Adding API Gateway Policies Now Easier With Red Hat 3scale API Management"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/"&gt;Adding API Gateway Policies Now Easier With Red Hat 3scale API Management&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EHDaF4zSqVg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;With the May 2018 release of Red Hat 3scale API Management 2.2, adding API Gateway policies to your API management layer is easier than ever. What is a Policy? Red Hat 3scale API Management provides units of functionality that modify the behavior of the API Gateway without the need to implement code. These management components [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/"&gt;Adding API Gateway Policies Now Easier With Red Hat 3scale API Management&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">498317</post-id><dc:creator>Hugo Guerrero</dc:creator><dc:date>2018-05-30T16:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/30/3scale-api-gateway-policies/</feedburner:origLink></entry></feed>
